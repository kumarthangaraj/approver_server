{
  "_args": [
    [
      {
        "raw": "strong-remoting@^2.21.0",
        "scope": null,
        "escapedName": "strong-remoting",
        "name": "strong-remoting",
        "rawSpec": "^2.21.0",
        "spec": ">=2.21.0 <3.0.0",
        "type": "range"
      },
      "D:\\Kumar\\ABK\\BUA\\barcode_gen\\node_modules\\loopback"
    ]
  ],
  "_from": "strong-remoting@>=2.21.0 <3.0.0",
  "_id": "strong-remoting@2.35.1",
  "_inCache": true,
  "_location": "/strong-remoting",
  "_nodeVersion": "10.4.0",
  "_npmOperationalInternal": {
    "host": "s3://npm-registry-packages",
    "tmp": "tmp/strong-remoting_2.35.1_1528448119792_0.9551709196114702"
  },
  "_npmUser": {
    "name": "bajtos",
    "email": "mbajtoss@gmail.com"
  },
  "_npmVersion": "6.1.0",
  "_phantomChildren": {
    "ms": "2.0.0"
  },
  "_requested": {
    "raw": "strong-remoting@^2.21.0",
    "scope": null,
    "escapedName": "strong-remoting",
    "name": "strong-remoting",
    "rawSpec": "^2.21.0",
    "spec": ">=2.21.0 <3.0.0",
    "type": "range"
  },
  "_requiredBy": [
    "/loopback",
    "/loopback-connector-remote"
  ],
  "_resolved": "https://registry.npmjs.org/strong-remoting/-/strong-remoting-2.35.1.tgz",
  "_shasum": "76644718626801c8dd6aaa9df8a03739b81f0850",
  "_shrinkwrap": null,
  "_spec": "strong-remoting@^2.21.0",
  "_where": "D:\\Kumar\\ABK\\BUA\\barcode_gen\\node_modules\\loopback",
  "browser": {
    "express": false,
    "body-parser": false,
    "cors": false,
    "js2xmlparser": false
  },
  "bugs": {
    "url": "https://github.com/strongloop/strong-remoting/issues"
  },
  "dependencies": {
    "async": "^2.0.1",
    "body-parser": "^1.12.4",
    "cors": "^2.6.0",
    "debug": "^3.1.0",
    "depd": "^1.1.0",
    "eventemitter2": "^2.1.0",
    "express": "4.x",
    "inflection": "^1.7.1",
    "jayson": "^2.0.5",
    "js2xmlparser": "^1.0.0",
    "loopback-phase": "^1.3.0",
    "mux-demux": "^3.7.9",
    "qs": "^6.2.1",
    "request": "^2.55.0",
    "sse": "0.0.7",
    "strong-globalize": "^2.6.6",
    "traverse": "^0.6.6",
    "xml2js": "^0.4.8"
  },
  "description": "StrongLoop Remoting Module",
  "devDependencies": {
    "bluebird": "^3.4.1",
    "chai": "^3.5.0",
    "coveralls": "^3.0.1",
    "event-stream": "^3.3.1",
    "eventsource": "^0.2.1",
    "http-auth": "2.4.11",
    "jscs": "^3.0.7",
    "jshint": "^2.9.5",
    "mocha": "^5.2.0",
    "nyc": "^12.0.2",
    "socket.io": "^2.1.1",
    "supertest": "^3.1.0"
  },
  "directories": {},
  "dist": {
    "integrity": "sha512-aFLEOpU/LbHmmBCS79HaakqqBGctQQG1rwKwRnkXhr8A8UFkz241k4bDcbjwybjAqs3GC8BL6lQN9tcDjhXI+g==",
    "shasum": "76644718626801c8dd6aaa9df8a03739b81f0850",
    "tarball": "https://registry.npmjs.org/strong-remoting/-/strong-remoting-2.35.1.tgz",
    "fileCount": 52,
    "unpackedSize": 226139,
    "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJbGkR4CRA9TVsSAnZWagAADx0P/ixKn/SX3+UUOLifmtaI\nLEC7rG4h1spdAsHwijw9K3U9/VpPHLP5psXVDOD+5qiUDpgg5JquirPdz5vF\nTAoDdTup+Ipxy4bByzp3uBdekZD8cfF/lF1hVPIr4kqgR5HFdVdBZhq9iguB\nCyFLYOrkbG4xsJSPiwQVUE6JywXehd443V6lHTpYiAjb+DHyI8BmkbnT5Brw\ni3WmvIQVG4i/cEulSV2F2uGEytDkBFHy2Xk6FcG+1FL8VOopujVesPJajv7I\nmN2rm2LN6dHp1GzGMmptCDXnI7TlyQERbry0CGjWYW+265e/wrKU84A3wShe\nSln09dK4GKH6VECSXzsvRUkw2fLmIoN7MvGAfNOxWS3CkeuVR5HKKqiw344U\nxIvq/js8Ey3WfxJqsbSAGL9PZPvspxKQkbefXF8BmDBE0kYz6H5YJDzVRGPq\nvhHFgU5eKX6pvjolN0vtKo90VRasBhWX64lI4tVvCRQTvKXmoCKWk/rQs0v8\nDp1ga4qySKiCtpfbJZ+NXr5moyae/tKH7fAT6tcWys/b8oRydMzI7KkGsvBw\nAcxS7OCcn2xf9gQleKnwlPjduL9UVL6WwOggmNGmgMpGqhry09Xvfa19iVBi\nIcF4SJSu0MN4Cau0t5uNTh3ojUVZSs9DQ6AZ9qEj8ijWuMiBbuepbSMXMXDu\naOll\r\n=FEVM\r\n-----END PGP SIGNATURE-----\r\n"
  },
  "engines": {
    "node": ">=4.0.0"
  },
  "gitHead": "10078e911ed71f3c2590e11f4bb03898b02f45d3",
  "homepage": "https://github.com/strongloop/strong-remoting#readme",
  "keywords": [
    "StrongLoop",
    "LoopBack",
    "Remoting",
    "REST"
  ],
  "license": "Artistic-2.0",
  "maintainers": [
    {
      "name": "0candy",
      "email": "ngcandy@ca.ibm.com"
    },
    {
      "name": "amir-61",
      "email": "amirali.jfr61@gmail.com"
    },
    {
      "name": "b-admike",
      "email": "binadmt@hotmail.com"
    },
    {
      "name": "bajtos",
      "email": "mbajtoss@gmail.com"
    },
    {
      "name": "davidcheung",
      "email": "davidcheung@live.ca"
    },
    {
      "name": "dhmlau",
      "email": "dianahmlau@gmail.com"
    },
    {
      "name": "hacksparrow",
      "email": "captain@hacksparrow.com"
    },
    {
      "name": "jannyhou2016",
      "email": "juehou@ca.ibm.com"
    },
    {
      "name": "kjdelisle",
      "email": "kjdelisle@gmail.com"
    },
    {
      "name": "kraman",
      "email": "kraman@gmail.com"
    },
    {
      "name": "mahesh.patsute",
      "email": "mahesh.patsute@ibm.com"
    },
    {
      "name": "qpresley",
      "email": "qpresley@ca.ibm.com"
    },
    {
      "name": "rashmihunt",
      "email": "rashmihunt@gmail.com"
    },
    {
      "name": "rfeng",
      "email": "enjoyjava@gmail.com"
    },
    {
      "name": "ritch",
      "email": "skawful@gmail.com"
    },
    {
      "name": "rmg",
      "email": "r.m.graham@gmail.com"
    },
    {
      "name": "schoonology",
      "email": "michael.r.schoonmaker@gmail.com"
    },
    {
      "name": "superkhau",
      "email": "superkhau@gmail.com"
    },
    {
      "name": "thegman",
      "email": "gpandya@live.com"
    },
    {
      "name": "tonyf-ibm",
      "email": "tffrench@us.ibm.com"
    },
    {
      "name": "virkt25",
      "email": "taranveer@virk.cc"
    }
  ],
  "name": "strong-remoting",
  "optionalDependencies": {},
  "publishConfig": {
    "tag": "lts"
  },
  "readme": "## Overview\nObjects (and, therefore, data) in Node applications commonly need to be accessible by other Node processes, browsers, and even mobile clients.   Strong remoting:\n\n * Makes local functions remotable, exported over adapters.\n * Supports multiple transports, including custom transports.\n * Manages serialization to JSON and deserialization from JSON.\n * Supports multiple client SDKs, including mobile clients.\n\n<div class=\"confluence-hide\">\nAlso see the <a href=\"http://docs.strongloop.com/display/LB/Strong+Remoting\">official StrongLoop documentation</a>.</div>\n\n### Client SDK support\n\nFor higher-level transports, such as REST and Socket.IO, existing clients will work well. If you want to be able to swap out your transport, use one of our supported clients. The same adapter model available on the server applies to clients, so you can switch transports on both the server and all clients without changing your application-specific code.\n\n## Installation\n\n```sh\n$ npm install strong-remoting\n```\n\n## Quick start\n\nThe following example illustrates how to set up a basic strong-remoting server with a single remote method, user.greet.\n\n```js\n// Create a collection of remote objects.\nvar remoting = require('../');\nvar SharedClass = remoting.SharedClass\nvar remotes = remoting.create();\n\n// define a class-like object (or constructor)\nfunction User() {\n\n}\n\nUser.greet = function (fn) {\n  fn(null, 'hello, world!');\n}\n\n// create a shared class to allow strong-remoting to map\n// http requests to method invocations on your class\nvar userSharedClass = new SharedClass('user', User);\n\n// Tell strong-remoting about your greet method\nuserSharedClass.defineMethod('greet', {\n  isStatic: true, // not an instance method\n  returns: [{\n    arg: 'msg',\n    type: 'string' // define the type of the callback arguments\n  }]\n});\n// Expose it over the REST transport.\nrequire('http')\n  .createServer(remotes.handler('rest'))\n  .listen(3000);\n```\n\nThen, invoke `User.greet()` easily with `curl` (or any HTTP client)!\n\n    $ curl http://localhost:3000/user/greet?str=hello\n\nResult:\n\n```\n{\n  \"msg\": \"hello world\"\n}\n```\n\n## Concepts\n\n### Remote objects\n\nMost Node applications expose a remotely-available API.  Strong-remoting enables you to build your app in vanilla JavaScript and export remote objects over the network the same way you export functions from a module. Since they're just plain JavaScript objects, you can always invoke methods on your remote objects locally in JavaScript, whether from tests or other, local objects.\n\n### Remote object collections\n\nCollections that are the result of require('strong-remoting').create() are responsible for binding their remote objects to transports, allowing you to swap out the underlying transport without changing any of your application-specific code.\n\n### Adapters\n\nAdapters provide the transport-specific mechanisms to make remote objects (and collections thereof) available over their transport. The REST adapter, for example, handles an HTTP server and facilitates mapping your objects to RESTful resources. Other adapters, on the other hand, might provide a less opionated, RPC-style network interface. Your application code doesn't need to know what adapter it's using.\n\n### Hooks\n\nHooks enable you to run code before remote objects are constructed or methods on those objects are invoked. For example, you can prevent actions based on context (HTTP request, user credentials, and so on).\n\n```js\n// Do something before any hook is executed\nremotes.authorization = function(ctx, next) {\n  if(checkContext(ctx)) {\n    // allow\n    next();\n  } else {\n    // deny\n    var err = new Error('denied!');\n    err.statusCode = 401;\n    next(err);\n  }\n}\n\n// Do something before our `user.greet` example, earlier.\nremotes.before('user.greet', function (ctx, next) {\n  if((ctx.req.param('password') || '').toString() !== '1234') {\n    next(new Error('Bad password!'));\n  } else {\n    next();\n  }\n});\n\n// Do something before any `user` method.\nremotes.before('user.*', function (ctx, next) {\n  console.log('Calling a user method.');\n  next();\n});\n\n// Do something before a `dog` instance method.\nremotes.before('dog.prototype.*', function (ctx, next) {\n  var dog = this;\n  console.log('Calling a method on \"%s\".', dog.name);\n  next();\n});\n\n// Do something after the `speak` instance method.\n// NOTE: you cannot cancel a method after it has been called.\nremotes.after('dog.prototype.speak', function (ctx, next) {\n  console.log('After speak!');\n  next();\n});\n\n// Do something before all methods.\nremotes.before('**', function (ctx, next, method) {\n  console.log('Calling:', method.name);\n  next();\n});\n\n// Modify all returned values named `result`.\nremotes.after('**', function (ctx, next) {\n  ctx.result += '!!!';\n  next();\n});\n```\n\nSee the before-after example for more info.\n\n### Streams\n\nStrong-remoting supports methods that expect or return Readable and Writeable streams. This enables you to stream raw binary data such as files over the network without writing transport-specific behavior.\n\nFor example, the following code exposes a method of the `fs` Remote Object, `fs.createReadStream`, over the REST adapter:\n\n```js\n// Create a Collection.\nvar remotes = require('strong-remoting').create();\n\n// Share some fs module code.\nvar fs = remotes.exports.fs = require('fs');\n\n// Specifically export the `createReadStream` function.\nfs.createReadStream.shared = true;\n\n// Describe the arguments.\nfs.createReadStream.accepts = {arg: 'path', type: 'string'};\n\n// Describe the stream destination.\nfs.createReadStream.http = {\n  // Pipe the returned `Readable` stream to the response's `Writable` stream.\n  pipe: {\n    dest: 'res'\n  }\n};\n\n// Expose the Collection over the REST Adapter.\nrequire('http')\n  .createServer(remotes.handler('rest'))\n  .listen(3000);\n```\n\nThen you can invoke fs.createReadStream() using curl as follows:\n\n    $ curl http://localhost:3000/fs/createReadStream?path=some-file.txt\n\n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/strongloop/strong-remoting.git"
  },
  "scripts": {
    "coverage": "nyc report --reporter=text-lcov | coveralls",
    "lint": "jshint . && jscs .",
    "posttest": "npm run lint",
    "test": "nyc mocha"
  },
  "version": "2.35.1"
}
