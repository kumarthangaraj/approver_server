{
  "_args": [
    [
      {
        "raw": "js-feel@git+https://github.com/EdgeVerve/feel.git#master",
        "scope": null,
        "escapedName": "js-feel",
        "name": "js-feel",
        "rawSpec": "git+https://github.com/EdgeVerve/feel.git#master",
        "spec": "git+https://github.com/EdgeVerve/feel.git#master",
        "type": "hosted",
        "hosted": {
          "type": "github",
          "ssh": "git@github.com:EdgeVerve/feel.git#master",
          "sshUrl": "git+ssh://git@github.com/EdgeVerve/feel.git#master",
          "httpsUrl": "git+https://github.com/EdgeVerve/feel.git#master",
          "gitUrl": "git://github.com/EdgeVerve/feel.git#master",
          "shortcut": "github:EdgeVerve/feel#master",
          "directUrl": "https://raw.githubusercontent.com/EdgeVerve/feel/master/package.json"
        }
      },
      "D:\\Kumar\\ABK\\BUA\\barcode_gen\\node_modules\\oe-cloud"
    ]
  ],
  "_from": "git+https://github.com/EdgeVerve/feel.git#master",
  "_id": "js-feel@1.4.3",
  "_inCache": true,
  "_location": "/js-feel",
  "_phantomChildren": {},
  "_requested": {
    "raw": "js-feel@git+https://github.com/EdgeVerve/feel.git#master",
    "scope": null,
    "escapedName": "js-feel",
    "name": "js-feel",
    "rawSpec": "git+https://github.com/EdgeVerve/feel.git#master",
    "spec": "git+https://github.com/EdgeVerve/feel.git#master",
    "type": "hosted",
    "hosted": {
      "type": "github",
      "ssh": "git@github.com:EdgeVerve/feel.git#master",
      "sshUrl": "git+ssh://git@github.com/EdgeVerve/feel.git#master",
      "httpsUrl": "git+https://github.com/EdgeVerve/feel.git#master",
      "gitUrl": "git://github.com/EdgeVerve/feel.git#master",
      "shortcut": "github:EdgeVerve/feel#master",
      "directUrl": "https://raw.githubusercontent.com/EdgeVerve/feel/master/package.json"
    }
  },
  "_requiredBy": [
    "/oe-cloud"
  ],
  "_resolved": "git+https://github.com/EdgeVerve/feel.git#454725068ed25e3ad208a1e9b261cd3075560a3c",
  "_shasum": "0fba101cc8101a1399ea5c705ee111dd68d9883e",
  "_shrinkwrap": null,
  "_spec": "js-feel@git+https://github.com/EdgeVerve/feel.git#master",
  "_where": "D:\\Kumar\\ABK\\BUA\\barcode_gen\\node_modules\\oe-cloud",
  "author": {
    "name": "Pragyan Das",
    "email": "pragyandas@msn.com"
  },
  "bugs": {
    "url": "https://github.com/EdgeVerve/feel/issues"
  },
  "dependencies": {
    "big.js": "^3.1.3",
    "bunyan": "^1.8.12",
    "lodash": "^4.17.4",
    "moment": "^2.18.1",
    "moment-timezone": "^0.5.13",
    "xlsx": "^0.8.0"
  },
  "description": "FEEL(Friendly Enough Expression Language) based on DMN specification 1.1 for conformance level 3",
  "devDependencies": {
    "chai": "^3.5.0",
    "chalk": "^1.1.3",
    "eslint": "^3.19.0",
    "eslint-config-airbnb": "^14.1.0",
    "eslint-plugin-import": "^2.2.0",
    "eslint-plugin-jsx-a11y": "^4.0.0",
    "eslint-plugin-react": "^6.9.0",
    "gulp": "^3.9.1",
    "gulp-clean": "^0.3.2",
    "gulp-concat": "^2.6.1",
    "gulp-eslint": "^3.0.1",
    "gulp-if": "^2.0.2",
    "gulp-insert": "^0.5.0",
    "gulp-istanbul": "^1.1.1",
    "gulp-mocha": "^3.0.1",
    "gulp-util": "^3.0.8",
    "gulp-watch": "^4.3.11",
    "istanbul": "^0.4.5",
    "minimist": "^1.2.0",
    "mocha": "^3.2.0",
    "pegjs": "^0.10.0",
    "pegjs-backtrace": "^0.1.1",
    "pre-commit": "^1.2.2",
    "through2": "^2.0.3"
  },
  "engines": {
    "node": ">=6.9.2"
  },
  "gitHead": "454725068ed25e3ad208a1e9b261cd3075560a3c",
  "homepage": "https://github.com/EdgeVerve/feel#readme",
  "keywords": [
    "FEEL",
    "DMN 1.1",
    "Expression",
    "Language",
    "PEG",
    "PEGjs",
    "Decision Table",
    "Rule Engine"
  ],
  "main": "index.js",
  "name": "js-feel",
  "optionalDependencies": {},
  "pre-commit": [
    "precommit-msg",
    "lint"
  ],
  "readme": "[![Build Status](https://travis-ci.org/EdgeVerve/feel.svg?branch=master)](https://travis-ci.org/EdgeVerve/feel) [![Coverage Status](https://coveralls.io/repos/github/EdgeVerve/feel/badge.svg?branch=master)](https://coveralls.io/github/EdgeVerve/feel?branch=master) [![License: MIT](https://img.shields.io/badge/License-MIT-blue.svg)](https://opensource.org/licenses/MIT) [![npm](https://img.shields.io/npm/v/js-feel.svg)](https://npmjs.org/package/js-feel) \r\n\r\n[![NPM](https://nodei.co/npm/js-feel.png?compact=true)](https://npmjs.org/package/js-feel)\r\n\r\n# About\r\n\r\n[FEEL](https://github.com/EdgeVerve/feel/wiki/What-is-FEEL%3F) is an expression language based on DMN specification conformance level 3.\r\nWritten using [PEG.js](https://pegjs.org/) - JavaScript Parser Generator.\r\nFEEL is a very powerful language built with the purpose of defining rules in Business Rule Engines.\r\nFEEL also offers an API to implement and execute Decision Table defined in excel (.xlsx)\r\n\r\n# Getting Started\r\n\r\nFEEL is a completely flexible library which can be used with any project to add support for *Decision Table*. It also comes with a powerful expression language termed *FEEL* built-in to define a multitude of decision rules.\r\n\r\n## Installation\r\n\r\n### Development\r\n\r\n```sh\r\n# npm install\r\nnpm install js-feel --save\r\n\r\n```\r\n\r\n### Contribution\r\n\r\n```sh\r\n# clone repo\r\ngit clone https://github.com/EdgeVerve/feel.git\r\n\r\n# or fork repo\r\n\r\n# install dependencies\r\nnpm install\r\n\r\n# run test cases\r\nnpm test\r\n\r\n# watch for changes in source and grammar\r\ngulp watch\r\n\r\n# generate parser from grammar\r\ngulp generate\r\n\r\n# lint source files\r\nnpm run lint\r\n\r\n# lint-fix source files\r\nnpm run lintfix\r\n```\r\n\r\n# Usage\r\n\r\n## Using [Decision Table](https://github.com/EdgeVerve/feel/wiki/Decision-Table#what-is-decision-table)\r\n\r\nDecision tables are defined in excel (.xlsx). Please check [Sample Rules](README.md#sample-rules).\r\nEach cell in the body of the decision table has to be a valid FEEL expression. The following make use of FEEL parser to parse and execute expressions and hence the decision logic.\r\n\r\n### Excel to Decision Table\r\n\r\n```javascript\r\nconst { decisionTable } = require('feel')();\r\n\r\nconst csv = decisionTable.xls_to_csv('./test/StudentFinancialPackageEligibility.xlsx');\r\nconst decision_table = decisionTable.csv_to_decision_table(csv[0]);\r\n```\r\n\r\n### Execute Decision Table\r\n\r\nThe Decision Table (decision_table) created in the previous step can be executed using;  *decisionTable.execute_decision_table*\r\n\r\n```javascript\r\n\r\nconst payload = {\"Student GPA\" : 3.6,\"Student Extra-Curricular Activities Count\" : 4,\"Student National Honor Society Membership\" : \"Yes\"};\r\ndecisionTable.execute_decision_table(\"StudentFinancialPackageEligibility\", decision_table,payload, (results)=> {\r\n    console.log(results)\r\n});\r\n```\r\n\r\n## Using [FEEL](https://github.com/EdgeVerve/feel/wiki/What-is-FEEL%3F) Standalone\r\n\r\n```javascript\r\nconst {feel} = require('feel')();\r\n\r\nconst rule = 'a + b - c';\r\nconst context = {\r\n    a: 10,\r\n    b: 20,\r\n    c: 5\r\n};\r\n\r\nconst parsedGrammar = feel.parse(rule);\r\nparsedGrammar.build(context).then(result => {\r\n    console.log(result);\r\n}).catch(err => console.error(err));\r\n```\r\n\r\n# Sample FEEL Expressions\r\n\r\nSome valid FEEL expressions (logically categorized):\r\n\r\n### Arithmetic\r\n\r\n- a + b - c\r\n- ((a + b)/c - (d + e*2))**f\r\n- 1-(1+rate/12)**-term\r\n- (a + b)**-c\r\n- date(\"2012-12-25\") + date(\"2012-12-24\")\r\n- time(\"T13:10:06\") - time(\"T13:10:05\")\r\n- date and time(\"2012-12-24T23:59:00\") + duration(\"P1Y\")\r\n\r\n### Comparision\r\n\r\n- 5 in (<= 5)\r\n- 5 in ((5..10])\r\n- 5 in ([5..10])\r\n- 5 in (4,5,6)\r\n- 5 in (<5,>5)\r\n- (a + 5) >= (7 + g)\r\n- (a+b) between (c + d) and (e - f)\r\n- date(\"2012-12-25\") > date(\"2012-12-24\")\r\n- date and time(\"2012-12-24T23:59:00\") < date and time(\"2012-12-25T00:00:00\")\r\n\r\n### Conjunction\r\n\r\n- a or b\r\n- a and b\r\n- ((a or b) and (b or c)) or (a and d)\r\n- ((a > b) and (a > c)) and (b > c)\r\n- ((a + b) > (c - d)) and (a > b)\r\n- a or b or a > b\r\n- (x(i, j) = y) and (a > b)\r\n- (a + b) > (c - d) and (a > b)\r\n\r\n### For\r\n\r\n- for a in [1,2,3] return a * a\r\n- for age in [18..40], name in [\"george\", \"mike\", \"bob\"] return status\r\n\r\n### Function Definition\r\n\r\n- function(age) age < 21\r\n- function(rate, term, amount) (amount*rate/12)/(1-(1+rate/12)**-term)\r\n\r\n### If\r\n\r\n- if applicant.maritalStatus in (\"M\", \"S\") then \"valid\" else \"not valid\"\r\n- if Pre-Bureau Risk Category = \"DECLINE\" or Installment Affordable = false or Age < 18 or Monthly Income < 100 then \"INELIGIBLE\" else \"ELIGIBLE\"\r\n- if \"Pre-Bureau Risk Category\" = \"DECLINE\" or \"Installment Affordable\" = false or Age < 18 or \"Monthly Income\" < 100 then \"INELIGIBLE\" else \"ELIGIBLE\"\r\n\r\n### Quantified\r\n\r\n- some ch in credit history satisfies ch.event = \"bankruptcy\"\r\n\r\n### Date Time Semantics\r\n\r\n- time(\"13:10:05@Etc/UTC\").hour\r\n- time(\"13:10:05@Etc/UTC\").minute\r\n- time(\"13:01:05+05:30\").second\r\n- date and time(\"2012-12-24T23:59:00\").year\r\n- date(\"2017-06-10\").month\r\n- date(\"2017-06-10\").day\r\n- duration(\"P13M\").years\r\n- duration(\"P1Y11M\").months\r\n- duration(\"P5DT12H10M\").days\r\n- duration(\"P5DT12H10M\").hours\r\n- duration(\"P5DT12H10M\").minutes\r\n- duration(\"P5DT12H10M25S\").seconds\r\n\r\n### Date Time Conversion and Equality\r\n\r\n- date(\"2012-12-25\") â€“ date(\"2012-12-24\") = duration(\"P1D\")\r\n- date and time(\"2012-12-24T23:59:00\") + duration(\"PT1M\") = date and time(\"2012-12-25T00:00:00\")\r\n- time(\"23:59:00z\") + duration(\"PT2M\") = time(\"00:01:00@Etc/UTC\")\r\n- date and time(\"2012-12-24T23:59:00\") - date and time(\"2012-12-22T03:45:00\") = duration(\"P2DT20H14M\")\r\n- duration(\"P2Y2M\") = duration(\"P26M\")\r\n\r\n***Please note: This is not a complete list of FEEL Expressions. Please refer [DMN Specification Document](http://www.omg.org/spec/DMN/1.1/) for detailed documentation on FEEL grammar.***\r\n\r\n# Sample Rules\r\n\r\n[Validation.xlsx](/test/data/Validation.xlsx)\r\n\r\n[PostBureauRiskCategory.xlsx](/test/data/PostBureauRiskCategory.xlsx)\r\n\r\n[ElectricityBill.xlsx](/test/data/ElectricityBill.xlsx)\r\n\r\n# Reference\r\n\r\nFor comprehensive set of documentation on DMN, you can refer to :\r\n\r\n[DMN Specification Document](http://www.omg.org/spec/DMN/1.1/)\r\n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git+ssh://git@github.com/EdgeVerve/feel.git"
  },
  "scripts": {
    "build": "gulp",
    "lint": "eslint .",
    "lintfix": "eslint . --fix",
    "precommit-msg": "echo 'Pre-commit checks...' && exit 0",
    "test": "mocha ./test/**/*.spec.js"
  },
  "version": "1.4.3"
}
